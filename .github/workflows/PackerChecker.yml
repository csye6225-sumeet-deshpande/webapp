name: Packer Validation and Formatting Check

 

on:
  pull_request:
    branches:
      - main

 
jobs:

  packer-check:

    runs-on: ubuntu-latest

 

    steps:

      - name: Checkout code

        uses: actions/checkout@v2

      - name: Step 2 - zip all the webapp files
        run: |
          zip -r webapp.zip ./
          pwd ./webapp


      - name: Install Packer

        run: |

          PACKER_VERSION="1.9.4"  # specify your desired version

          wget https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip

          unzip packer_${PACKER_VERSION}_linux_amd64.zip

          sudo mv packer /usr/local/bin/

          packer --version
    
      - name: Packer variables
        run: |
          touch ami.pkrvars.hcl
          echo aws_region=\"${{ vars.aws_region }}\" >> ami.pkrvars.hcl
          echo source_ami=\"${{ vars.source_ami }}\" >> ami.pkrvars.hcl
          echo ssh_username=\"${{ vars.ssh_username }}\" >> ami.pkrvars.hcl
          echo aws_profile=\"${{ vars.aws_profile }}\" >> ami.pkrvars.hcl
          echo instance_type=\"${{ vars.instance_type }}\" >> ami.pkrvars.hcl
          echo os_name=\"${{ vars.os_name }}\" >> ami.pkrvars.hcl
          echo os_root_type=\"${{ vars.os_root_type }}\" >> ami.pkrvars.hcl
          echo os_vr=\"${{ vars.os_vr }}\" >> ami.pkrvars.hcl
          echo dev_id=\"${{ vars.dev_id}}\" >> ami.pkrvars.hcl
          echo demo_id=\"${{ vars.demo_id}}\" >> ami.pkrvars.hcl

      - name: Initialize Packer

        run: packer init ami.pkr.hcl


      - name: Validate Packer Template

        run: packer validate -evaluate-datasources --var-file=ami.pkrvars.hcl ami.pkr.hcl

 

      - name: Check Packer Formatting

        run: |

          if ! packer fmt -check ami.pkr.hcl; then

            echo "Invalid packer format"

            exit 1

          fi

 